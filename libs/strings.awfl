# String operations #
### string-from-list, string-concat, string-split-at, string-len, string-insert-at

include lists


## Convert a list (of codepoints) into a string (via pushi) ##
def string-from-list  1   # l
  as l                    #    l -> l

  def convert  1
    dup                   # i i
    l swap pull           # i l elem
    swapover              # elem l i
    pushi                 # l (updated)
    up ...l               #   l -> l
  end  0

  0 l.num 1               # l num
  &convert for            # (loop)
  3 l :type pushi         # convert type and leave string on stack
end  1
assert
  "abc"
  "54343/1000"
from
  [ 97 98 99 ] string-from-list
  54.343 string-from-list
end


## Concatenate two strings ##
def string-concat  2
  list-concat
  string-from-list
end  1
assert
  "abcde"
from
  :ab "cde" string-concat
end


## String splitting ##
def string-split-at  2    # string index
  list-split-at           # list1 list2
  string-from-list        # list1 s2
  swap                    # s2 list1
  string-from-list        # s2 s1
  swap                    # s1 s2
end  2
assert
  "abc"
  "de"
from
  "abcde" 3 string-split-at
end
assert "abcde" from "abcde" 2 string-split-at string-concat end


## Get string length
def string-len  1
  :num pull popnos
end  1
assert
  3 0 1
from
  "abc" string-len
  "" string-len
  :c string-len
end


## Insert a string at a position ##
def string-insert-at  3     # string index insert-string
  as toinsert
  as index
  index string-split-at     # prefix suffix
  swap toinsert string-concat
  swap string-concat
end  1
assert
  :axbc
  :xabc
  :abcx
from
  "abc" 1 :x string-insert-at
  "abc" 0 :x string-insert-at
  "abc" 3 :x string-insert-at
end
